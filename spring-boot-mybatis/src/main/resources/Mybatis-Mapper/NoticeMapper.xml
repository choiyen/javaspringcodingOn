<?xml version="1.0" encoding="UTF-8"?>
<!--XML 문서 버전과 인코딩 선언-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--MyBatics 매퍼 DTO(Document Type Definition)-->
<mapper namespace="CodingOnPAR.spring_boot_mybatis.mapper.NoticeMapper">
    <!-- 매퍼 네임스페이스 정의 (UserMapper 인터페이스 전체 경로 지정 -->
    <!-- XML 기반의 MyBatis 매퍼 사용 -->
    <!--  select 테그
        - id : UserMapper 인터페이스의 메서드 이름과 일치(해당 값으로 쿼리를 식별)
        - resultType : 쿼리에 전달되는 매핑할 객체의 타입 지정
        - parameterType : 쿼리에 전달되는 파리미터 타입 지정 가능
     -->
    <select id="findAll" resultType="CodingOnPAR.spring_boot_mybatis.domain.Notice">
        SELECT * FROM notice
    </select>
    <select id="FindById" parameterType="long" resultType="CodingOnPAR.spring_boot_mybatis.domain.Notice">
        SELECT * FROM notice WHERE id = #{id}
    </select>
    <!-- insert 테그 속성 정리
          - id : UserMapper 인터페이스의 메서드 이름과 일치(해당 값으로 쿼리를 식별)
          - parameterType : 삽입할 객체의 타입을 지정함
          - useGeneratedKeys : DB에서 자동 생성된 키를 사용할지 여부를 지정할 수 있음
          - keyProperty : 자동 생성된 키 값을 지정할 파라미터 객체의 속성명을 지정할 수 있다.
    -->
    <insert id="insert" parameterType="CodingOnPAR.spring_boot_mybatis.domain.Notice" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notice(writer,title,content) VALUES(#{writer},#{title}, #{content})
    </insert>
    <update id="update" parameterType="CodingOnPAR.spring_boot_mybatis.domain.Notice">
        UPDATE notice SET writer = #{writer}, title = #{title}, content = #{content} WHERE id = #{id}
    </update>
    <delete id="delete" parameterType="long">
        DELETE FROM notice WHERE id = #{id}
    </delete>
</mapper>